// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	mongo "go.mongodb.org/mongo-driver/mongo"
)

// CustomClient is an autogenerated mock type for the CustomClient type
type CustomClient struct {
	mock.Mock
}

// CustomConnet provides a mock function with given fields:
func (_m *CustomClient) CustomConnet() (*mongo.Client, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for CustomConnet")
	}

	var r0 *mongo.Client
	var r1 error
	if rf, ok := ret.Get(0).(func() (*mongo.Client, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *mongo.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*mongo.Client)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCustomClient creates a new instance of CustomClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCustomClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *CustomClient {
	mock := &CustomClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
